require 'spec_helper'

describe Tapyrus::Message::MerkleBlock do
  describe 'parse from payload' do
    subject do
      Tapyrus::Message::MerkleBlock.parse_from_payload(
        '01000000c0ea2fe2ef262bd0b4661677c2eea212f9cdcea12836950dc981479b1c855346a8a954d31f94c74584b9c015b76916e80baf80bfe8871048e57955b6eb6629565a39e01e190191aac81b640c0c68898e3e4036f1c72353da9133e4d30a68447af5aa235f00409bfc6803a40cd77d45379d58768e766beb564a29929259f816747ab8b667a49c548e89d37ed3fb86a1317cecf9dc92819766a26942fb33c02d60089cee5a757a0500000004b7b5d6976ce6bcd385c1f17253f94f48f7cae86aa760af92580293bd6ed9c3cf3b65b0931a566abc20eb0cdc55497ed24a8a7547df98a70cc2290e2fa8e1be6a10dd441ee8f7e3ca6739d56146e794c0fdb401b2764526f43aea79d4f116e466c220f471a5798cd345cf50e2d3f840edf16b3801d105cb3664f16dbe3531e176011b'
          .htb
      )
    end
    it 'should be parsed' do
      expect(subject.header.block_hash).to eq('3f6da9f7eac7dae259ac23d9d854bb4d08bb001c71cc39df3bb4c309604958a4')
      expect(subject.header.merkle_root).to eq('a8a954d31f94c74584b9c015b76916e80baf80bfe8871048e57955b6eb662956')
      expect(subject.tx_count).to eq(5)
      expect(subject.flags).to eq('1b')
    end
  end

  describe 'to_pkt' do
    subject do
      m = Tapyrus::Message::MerkleBlock.new
      m.header =
        Tapyrus::BlockHeader.parse_from_payload(
          '01000000c0ea2fe2ef262bd0b4661677c2eea212f9cdcea12836950dc981479b1c855346a8a954d31f94c74584b9c015b76916e80baf80bfe8871048e57955b6eb6629565a39e01e190191aac81b640c0c68898e3e4036f1c72353da9133e4d30a68447af5aa235f00409bfc6803a40cd77d45379d58768e766beb564a29929259f816747ab8b667a49c548e89d37ed3fb86a1317cecf9dc92819766a26942fb33c02d60089cee5a757a'
            .htb
        )
      m.hashes = [
        'b7b5d6976ce6bcd385c1f17253f94f48f7cae86aa760af92580293bd6ed9c3cf',
        '3b65b0931a566abc20eb0cdc55497ed24a8a7547df98a70cc2290e2fa8e1be6a',
        '10dd441ee8f7e3ca6739d56146e794c0fdb401b2764526f43aea79d4f116e466',
        'c220f471a5798cd345cf50e2d3f840edf16b3801d105cb3664f16dbe3531e176'
      ]
      m.tx_count = 5
      m.flags = '1b'
      m.to_pkt
    end
    it 'should be generate' do
      expect(subject).to eq(
        '0b1109076d65726b6c65626c6f636b00310100000a16c74b01000000c0ea2fe2ef262bd0b4661677c2eea212f9cdcea12836950dc981479b1c855346a8a954d31f94c74584b9c015b76916e80baf80bfe8871048e57955b6eb6629565a39e01e190191aac81b640c0c68898e3e4036f1c72353da9133e4d30a68447af5aa235f00409bfc6803a40cd77d45379d58768e766beb564a29929259f816747ab8b667a49c548e89d37ed3fb86a1317cecf9dc92819766a26942fb33c02d60089cee5a757a0500000004b7b5d6976ce6bcd385c1f17253f94f48f7cae86aa760af92580293bd6ed9c3cf3b65b0931a566abc20eb0cdc55497ed24a8a7547df98a70cc2290e2fa8e1be6a10dd441ee8f7e3ca6739d56146e794c0fdb401b2764526f43aea79d4f116e466c220f471a5798cd345cf50e2d3f840edf16b3801d105cb3664f16dbe3531e176011b'
          .htb
      )
    end
  end
end
